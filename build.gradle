plugins {
    id 'java-library'
    id 'maven-publish'
    id 'maven'
    id 'signing'
}

repositories {
    mavenCentral()
    maven {
        url "https://frcmaven.wpi.edu/artifactory/release/"
    }
    maven {
        url "https://maven.revrobotics.com/"
    }
    maven {
        url "https://maven.ctr-electronics.com/release/"
    }
}

dependencies {
    //implementation 'org.a05annex:a05annexUtil:0.9.1'
    api 'org.jetbrains:annotations:17.0.0'
    api 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'edu.wpi.first.wpilibj:wpilibj-java:2022.4.1'
    implementation 'edu.wpi.first.cameraserver:cameraserver-java:2022.4.1'
    implementation 'edu.wpi.first.wpilibNewCommands:wpilibNewCommands-java:2022.4.1'
    implementation 'com.kauailabs.navx.frc:navx-java:4.0.442'
    implementation 'edu.wpi.first.wpiutil:wpiutil-java:2022.4.1'
    implementation 'com.ctre.phoenix:wpiapi-java:5.20.2'
    implementation 'com.revrobotics.frc:REVLib-java:2022.1.1'
    implementation 'com.ctre.phoenix:api-java:5.20.2'
    implementation 'edu.wpi.first.ntcore:ntcore-java:2022.4.1'

    testImplementation 'junit:junit:4.12'
    testImplementation('org.junit.platform:junit-platform-runner:1.4.2')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.4.2')
}

sourceCompatibility = '1.9'
targetCompatibility = '1.9'
version = '0.0.1'
group = 'org.a05annex'


java {
    withJavadocJar()
    withSourcesJar()
}

test {
    testLogging {
        events 'started', 'passed'
    }
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

signing {
    if (project.hasProperty("signing.keyId") &&
            project.hasProperty("signing.password") &&
            project.hasProperty("signing.secretKeyRingFile") )
    {
        sign configurations.archives
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'a05annexRobot'
            from components.java
            pom {
                name = 'A05annex Robot Library'
                description = 'A05annex robot base for swerve and NavX.'
                url = 'https://github.com/A05annex/a05annexRobot'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'A05annex'
                        name = 'A05annex'
                        email = 'a05annexrobotics@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/A05annex/a05annexRobot.git'
                    developerConnection = 'scm:git:ssh://github.com/A05annex/a05annexRobot.git'
                    url = 'https://github.com/A05annex/a05annexRobot'
                }
            }
        }

    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/A05annex/a05annexRobot"
            credentials {
                username = project.hasProperty("githubActor") ?
                        project.property("githubActor") : System.getenv("GITHUB_ACTOR")
                password = project.hasProperty("githubToken") ?
                        project.property("githubToken") : System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(
                        userName: project.hasProperty("ossrhUsername") ?
                                project.property("ossrhUsername") : System.getenv("OSSRH_USERNAME"),
                        password:  project.hasProperty("ossrhPassword") ?
                                project.property("ossrhPassword") : System.getenv("OSSRH_TOKEN") )
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(
                        userName: project.hasProperty("ossrhUsername") ?
                                project.property("ossrhUsername") : System.getenv("OSSRH_USERNAME"),
                        password:  project.hasProperty("ossrhPassword") ?
                                project.property("ossrhPassword") : System.getenv("OSSRH_TOKEN") )
            }
            pom.project {
                name = 'A05annex Robot Library'
                description = 'A05annex robot base for swerve and NavX.'
                url = 'https://github.com/A05annex/a05annexRobot'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'A05annex'
                        name = 'A05annex'
                        email = 'a05annexrobotics@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/A05annex/a05annexRobot.git'
                    developerConnection = 'scm:git:ssh://github.com/A05annex/a05annexRobot.git'
                    url = 'https://github.com/A05annex/a05annexRobot'
                }
            }
        }
    }
}




