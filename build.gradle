import edu.wpi.first.gradlerio.deploy.roborio.RoboRIO

plugins {
    id 'java-library'
    id 'maven-publish'
    //id 'maven'
    id 'signing'
    id 'edu.wpi.first.GradleRIO' version '2023.4.2'
}

def javaVersion = JavaVersion.VERSION_11
sourceCompatibility = javaVersion
targetCompatibility = javaVersion
version = '0.0.16'
group = 'org.a05annex'

// Set to true to use debug for JNI.
wpi.java.debugJni = false

test {
    useJUnitPlatform()
}

dependencies {
    //implementation 'org.a05annex:a05annexUtil:0.9.5'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api 'org.jetbrains:annotations:23.0.0'
    api 'com.googlecode.json-simple:json-simple:1.1.1'

    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    simulationRelease wpi.sim.enableRelease()

    testImplementation 'junit:junit:4.13.2'
    testImplementation('org.junit.platform:junit-platform-runner:1.9.0')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.0')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.9.0')
    testImplementation('org.mockito:mockito-core:4.8.0')
    testRuntimeOnly(files('libs/a05annexUtil-0.9.5.jar'))
}


java {
    withJavadocJar()
    withSourcesJar()
}

test {
    testLogging {
        events 'started', 'passed'
    }
}

artifacts {
    archives jar, javadocJar, sourcesJar
}

signing {
    if (project.hasProperty("signing.keyId") &&
            project.hasProperty("signing.password") &&
            project.hasProperty("signing.secretKeyRingFile") )
    {
        sign configurations.archives
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'a05annexRobot'
            from components.java
            pom {
                name = 'A05annex Robot Library'
                description = 'A05annex robot base for swerve and NavX.'
                url = 'https://github.com/A05annex/a05annexRobot'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'A05annex'
                        name = 'A05annex'
                        email = 'a05annexrobotics@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/A05annex/a05annexRobot.git'
                    developerConnection = 'scm:git:ssh://github.com/A05annex/a05annexRobot.git'
                    url = 'https://github.com/A05annex/a05annexRobot'
                }
            }
        }

    }

// this is publishing to the github repository, which never really worked - might be time to revisit this
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            url = "https://maven.pkg.github.com/A05annex/a05annexRobot"
//            credentials {
//                username = project.hasProperty("githubActor") ?
//                        project.property("githubActor") : System.getenv("GITHUB_ACTOR")
//                password = project.hasProperty("githubToken") ?
//                        project.property("githubToken") : System.getenv("GITHUB_TOKEN")
//            }
//        }
//    }
}

// This was the publishing to the sonatype repository. This worked in gradle 6, but needs an update for
// gradle 7.
//
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            // beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//            beforeDeployment { sign(publishing.publications["maven"]) }
//
//            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
//                authentication(
//                        userName: project.hasProperty("ossrhUsername") ?
//                                project.property("ossrhUsername") : System.getenv("OSSRH_USERNAME"),
//                        password:  project.hasProperty("ossrhPassword") ?
//                                project.property("ossrhPassword") : System.getenv("OSSRH_TOKEN") )
//            }
//
//            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
//                authentication(
//                        userName: project.hasProperty("ossrhUsername") ?
//                                project.property("ossrhUsername") : System.getenv("OSSRH_USERNAME"),
//                        password:  project.hasProperty("ossrhPassword") ?
//                                project.property("ossrhPassword") : System.getenv("OSSRH_TOKEN") )
//            }
//            pom.project {
//                name = 'A05annex Robot Library'
//                description = 'A05annex robot base for swerve and NavX.'
//                url = 'https://github.com/A05annex/a05annexRobot'
//                licenses {
//                    license {
//                        name = 'The Apache License, Version 2.0'
//                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id = 'A05annex'
//                        name = 'A05annex'
//                        email = 'a05annexrobotics@gmail.com'
//                    }
//                }
//                scm {
//                    connection = 'scm:git:git://github.com/A05annex/a05annexRobot.git'
//                    developerConnection = 'scm:git:ssh://github.com/A05annex/a05annexRobot.git'
//                    url = 'https://github.com/A05annex/a05annexRobot'
//                }
//            }
//        }
//    }
//}

wpi.java.configureTestTasks(test)




